{"version":3,"sources":["serviceWorker.js","index.js","Calculator.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","Calculator","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","operators","state","output","handleNumbers","event","_this","toString","slice","setState","target","value","handleZero","length","handleClear","handleOperators","includes","handleEquals","eval","e","alert","handleDecimal","test","split","react__WEBPACK_IMPORTED_MODULE_5___default","className","id","this","onClick","React","Component"],"mappings":"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","file":"static/js/main.9d14bd0b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\n\nconst operators = '-+/*';\n\nclass Calculator extends React.Component {\n\tstate = {\n\t\toutput: '0'\n\t};\n\n\t// event handler to add input to the input in state\n\thandleNumbers = event => {\n\t\tconst output = this.state.output.toString().slice();\n\t\tif (output === '0') this.setState({ output: event.target.value });\n\t\telse this.setState({ output: output + event.target.value });\n\t};\n\n\t// event handler to restrict starting with multiple zeros\n\thandleZero = () => {\n\t\tconst output = this.state.output.slice();\n\t\tif (output === '0' && output.length === 1) return;\n\t\telse this.setState({ output: output + '0' });\n\t};\n\n\t// event handler to clear input\n\thandleClear = () => this.setState({ output: '0' });\n\n\t// event handler for operators\n\thandleOperators = event => {\n\t\tconst { value } = event.target;\n\t\tconst output = this.state.output.toString().slice();\n\t\toperators.includes(output.slice(-1))\n\t\t\t? this.setState({ output: output.slice(0, output.length - 1) + value })\n\t\t\t: this.setState({ output: output + value });\n\t};\n\n\thandleEquals = () => {\n\t\ttry {\n\t\t\tconst output = eval(this.state.output.toString().slice());\n\t\t\tthis.setState({ output });\n\t\t} catch (e) {\n\t\t\talert('Please try a correct expression');\n\t\t\tthis.setState({ output: 0 });\n\t\t}\n\t};\n\n\thandleDecimal = event => {\n\t\tconst output = this.state.output.slice();\n\t\tif (/[.]/.test(output.split(/[-+/*]/).slice(-1))) return;\n\t\tthis.handleNumbers(event);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<div>\n\t\t\t\t\t<p id='display' className='output'>\n\t\t\t\t\t\t{this.state.output}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<button id='seven' value='7' onClick={this.handleNumbers}>\n\t\t\t\t\t\t\t7\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id='eight' value='8' onClick={this.handleNumbers}>\n\t\t\t\t\t\t\t8\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id='nine' value='9' onClick={this.handleNumbers}>\n\t\t\t\t\t\t\t9\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid='divide'\n\t\t\t\t\t\t\tvalue='/'\n\t\t\t\t\t\t\tclassName='operator'\n\t\t\t\t\t\t\tonClick={this.handleOperators}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t/\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<button id='four' value='4' onClick={this.handleNumbers}>\n\t\t\t\t\t\t\t4\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id='five' value='5' onClick={this.handleNumbers}>\n\t\t\t\t\t\t\t5\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id='six' value='6' onClick={this.handleNumbers}>\n\t\t\t\t\t\t\t6\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid='multiply'\n\t\t\t\t\t\t\tvalue='*'\n\t\t\t\t\t\t\tclassName='operator'\n\t\t\t\t\t\t\tonClick={this.handleOperators}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t*\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<button id='one' value='1' onClick={this.handleNumbers}>\n\t\t\t\t\t\t\t1\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id='two' value='2' onClick={this.handleNumbers}>\n\t\t\t\t\t\t\t2\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id='three' value='3' onClick={this.handleNumbers}>\n\t\t\t\t\t\t\t3\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid='add'\n\t\t\t\t\t\t\tvalue='+'\n\t\t\t\t\t\t\tclassName='operator'\n\t\t\t\t\t\t\tonClick={this.handleOperators}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t+\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<button id='decimal' value='.' onClick={this.handleDecimal}>\n\t\t\t\t\t\t\t.\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id='zero' value='0' onClick={this.handleZero}>\n\t\t\t\t\t\t\t0\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button id='equals' value='=' onClick={this.handleEquals}>\n\t\t\t\t\t\t\t=\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tid='subtract'\n\t\t\t\t\t\t\tvalue='-'\n\t\t\t\t\t\t\tclassName='operator'\n\t\t\t\t\t\t\tonClick={this.handleOperators}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t-\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<button id='clear' value='clear' onClick={this.handleClear}>\n\t\t\t\t\t\t\tClear\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Calculator;\n"],"sourceRoot":""}